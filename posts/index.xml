<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Posts on SpeedDragon Blog</title><link>https://speeddragon.github.io/posts/</link><description>Recent content in Posts on SpeedDragon Blog</description><generator>Hugo -- 0.150.1</generator><language>en-us</language><lastBuildDate>Sun, 28 Sep 2025 15:16:00 +0100</lastBuildDate><atom:link href="https://speeddragon.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Vehicle cluster simulation</title><link>https://speeddragon.github.io/posts/vehicle-cluster-simulation-and-fix/</link><pubDate>Sun, 28 Sep 2025 15:16:00 +0100</pubDate><guid>https://speeddragon.github.io/posts/vehicle-cluster-simulation-and-fix/</guid><description>How to control a vehicle cluster (speedometer and tachometer) using ESP32 and PWM signals, and fix it in the process.</description></item><item><title>Postgres - I can't replicate a slow query</title><link>https://speeddragon.github.io/posts/postgres-slow-query/</link><pubDate>Mon, 08 Sep 2025 16:26:00 +0100</pubDate><guid>https://speeddragon.github.io/posts/postgres-slow-query/</guid><description>&lt;p&gt;In one of my personal projects I&amp;rsquo;ve implemented a &lt;code&gt;GenServer&lt;/code&gt; to store slow queries. One of
these queries was returning 17+s seconds to return a result, so I decided to investigate the reason.&lt;/p&gt;
&lt;p&gt;For the context, I&amp;rsquo;m using a Postgres database and use PgAdmin as UI to test some queries.
The first step was to run the query on PgAdmin, but got a response immediately. Shouldn&amp;rsquo;t this query take 17+ seconds?&lt;/p&gt;</description></item><item><title>Bypass WAF</title><link>https://speeddragon.github.io/posts/bypass_waf/</link><pubDate>Mon, 01 Sep 2025 17:39:34 +0100</pubDate><guid>https://speeddragon.github.io/posts/bypass_waf/</guid><description>&lt;h1 id="intro"&gt;Intro&lt;/h1&gt;
&lt;p&gt;The people that creates or uses crawlers to fetch information from a web page, know that you can lose access if the website owner add a WAF (Web Application Firewall) to the web page. This will certainly make your life more difficult.&lt;/p&gt;
&lt;p&gt;Some examples of WAF are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CloudFlare WAF&lt;/li&gt;
&lt;li&gt;Imperva Cloud WAF&lt;/li&gt;
&lt;li&gt;AWS/Azure WAF&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="how-it-work"&gt;How it work?&lt;/h1&gt;
&lt;p&gt;&lt;img alt="WAF example" loading="lazy" src="https://speeddragon.github.io/images/waf_example.jpg#center"&gt;&lt;/p&gt;
&lt;p class="image-description"&gt;
https://pt-corp.storage.yandexcloud.net/upload/corporate/ww-en/download/PT-devteev-CC-WAF-ENG.pdf
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Normally sits between the client and the server.&lt;/li&gt;
&lt;li&gt;Monitor and filters HTTP traffic between server and clients.&lt;/li&gt;
&lt;li&gt;Contains complex rules to detect malicious traffic.
&lt;ul&gt;
&lt;li&gt;SQL Injections; XSS; TOR; Denial of Service (DoS), etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Blocks malicious traffic.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="story"&gt;Story&lt;/h1&gt;
&lt;p&gt;In one of my side projects I maintain some crawlers. Recently one stopped working after the website changed, but that wasn&amp;rsquo;t the only reason for the crawler to stop working, they also added a WAF to it.&lt;/p&gt;</description></item><item><title>Jump the TSA queue at the airport</title><link>https://speeddragon.github.io/posts/bypass_tsa/</link><pubDate>Tue, 13 Feb 2024 16:09:42 +0100</pubDate><guid>https://speeddragon.github.io/posts/bypass_tsa/</guid><description>&lt;p&gt;On a recent trip to the United States, I noticed there is a way to skip the TSA queue waiting for clearing immigration going out of the country, so I decided to share it here. But first I want to tell you how I ended up finding it.&lt;/p&gt;
&lt;p&gt;I arrived at the airport and went to the TSA queue for my designated flight gate. Waited until it was my time to go through with my passport and online boarding pass. While my friend went without any issues, I didn’t have the same result. The TSA officer told me to go back to the airline check-in counter and ask them to reprint my boarding ticket. He also gave me this little paper.&lt;/p&gt;</description></item><item><title>Elixir code coverage with partition test</title><link>https://speeddragon.github.io/posts/coverage-with-partition-test-a7835a147b42/</link><pubDate>Fri, 05 May 2023 11:15:56 +0000</pubDate><guid>https://speeddragon.github.io/posts/coverage-with-partition-test-a7835a147b42/</guid><description>With the release of Elixir 1.10, the --partition option was added to the mix test to be able to split our test suit in runners.</description></item><item><title>Bots and Crawlers — The automation of information gathering</title><link>https://speeddragon.github.io/posts/bots-and-crawlers-the-automation-of-information-gathering-e5afc88fb625/</link><pubDate>Wed, 11 Dec 2019 12:59:13 +0000</pubDate><guid>https://speeddragon.github.io/posts/bots-and-crawlers-the-automation-of-information-gathering-e5afc88fb625/</guid><description>Nowadays, with the fast pacing appearance of services on the Internet, we are faced constantly with new challenges. More commonly we are…</description></item><item><title>Phoenix with image upload to S3 in an API: Implementation and testing</title><link>https://speeddragon.github.io/posts/@speeddragon/phoenix-with-image-upload-to-s3-in-an-api-implementation-and-testing-6ab5187175b0/</link><pubDate>Tue, 02 May 2017 22:40:41 +0000</pubDate><guid>https://speeddragon.github.io/posts/@speeddragon/phoenix-with-image-upload-to-s3-in-an-api-implementation-and-testing-6ab5187175b0/</guid><description>Here it is, another small article about the implementation of a new functionality in the API service we are building using Elixir and…</description></item></channel></rss>